# set_jeju_area
import pandas as pd
from shapely.geometry import Point, Polygon

# 1. 각 구역의 다각형 경계 설정
seobu_polygon = Polygon([(126.162186,33.332823),(126.182098,33.358635),(126.221924,33.3896),
                         (126.263123,33.433733),(126.309128,33.467535),(126.387405,33.491017),
                         (126.388092,33.439463),(126.400452,33.416541),(126.363373,33.359209),
                         (126.33316,33.290934),(126.305008,33.228924),(126.265869,33.197902),
                         (126.164246,33.289212),(126.162186,33.332823)])

bukbu_polygon = Polygon([(126.387405,33.491017),(126.387405,33.442328),(126.399078,33.41826),
                         (126.359253,33.349458),(126.44989,33.357488),(126.452637,33.378706),
                         (126.459503,33.405078),(126.486282,33.41826),(126.532288,33.42743),
                         (126.563187,33.426857),(126.605759,33.429149),(126.625671,33.420553),
                         (126.633224,33.394759),(126.820679,33.452641),(126.769867,33.473836),
                         (126.723175,33.496743),(126.690903,33.515064),(126.674423,33.540822),
                         (126.640778,33.554557),(126.387405,33.491017)])

dongbu_polygon = Polygon([(126.640778,33.555701),(126.764374,33.56314),(126.821365,33.559707),
                          (126.899643,33.521361),(126.912689,33.506477),(126.936035,33.467535),
                          (126.933289,33.421699),(126.901703,33.391319),(126.826859,33.305282),
                          (126.765747,33.328233),(126.76712,33.363797),(126.817932,33.452641),
                          (126.688843,33.515637),(126.67305,33.540822),(126.640778,33.555701)])

namu_polygon = Polygon([(126.306381,33.230073),(126.471863,33.226052),(126.596832,33.235816),
                        (126.738968,33.278306),(126.827545,33.305282),(126.766434,33.328807),
                        (126.76712,33.362076),(126.818619,33.453214),(126.634598,33.393613),
                        (126.616058,33.33397),(126.596832,33.350032),(126.518555,33.323644),
                        (126.481476,33.327086),(126.45195,33.337986),(126.449203,33.358635),
                        (126.35788,33.350606),(126.306381,33.230073)])

sanji_polygon = Polygon([(126.459503,33.405364),(126.452637,33.379279),(126.449375,33.357775),
                         (126.451778,33.337986),(126.480789,33.327086),(126.51804,33.323787),
                         (126.596489,33.350175),(126.615887,33.334114),(126.634254,33.393613),
                         (126.627045,33.420266),(126.604042,33.429436),(126.531944,33.427717),
                         (126.485939,33.41826),(126.459503,33.405364)])

marado_polygon = Polygon([(126.268358, 33.12402), (126.26529, 33.119384), (126.264839, 33.116706), 
                         (126.26529, 33.114675), (126.266706, 33.113201), (126.268423, 33.1125), 
                         (126.269238, 33.113453), (126.270139, 33.117137), (126.269367, 33.119959), 
                         (126.270397, 33.122187), (126.268358, 33.12402)])

gapado_polygon = Polygon([(126.271384, 33.176138), (126.270611, 33.176245), (126.268873, 33.174862),
                         (126.265976, 33.172671), (126.26471, 33.171019), (126.263981, 33.169528),
                         (126.264796, 33.168199), (126.267242, 33.167157), (126.26838, 33.164966),
                         (126.270847, 33.163762), (126.276577, 33.165792), (126.276319, 33.166349),
                         (126.275461, 33.166475), (126.276641, 33.168091), (126.278744, 33.167642),
                         (126.278915, 33.169977), (126.277242, 33.17127), (126.27516, 33.173569),
                         (126.274796, 33.175006), (126.272843, 33.175258), (126.271362, 33.174934),
                          (126.271384, 33.176138)])

biyangdo_polygon = Polygon([(126.226773, 33.412404), (126.223147, 33.411329), (126.222568, 33.408588),
                         (126.222396, 33.405866), (126.225228, 33.4042), (126.22967, 33.404307),
                         (126.231108, 33.404881), (126.231022, 33.406081), (126.231687, 33.407424),
                         (126.23188, 33.409018), (126.232052, 33.410093), (126.230485, 33.411669),
                         (126.22894, 33.412189), (126.226773, 33.412404)])

chujado_polygon = Polygon([(126.280804, 33.97084), (126.28252, 33.961017), (126.29797, 33.951904),
                         (126.320972, 33.929545), (126.33007, 33.930542), (126.342773, 33.947062),
                         (126.341572, 33.955464), (126.280804, 33.97084)])

udo_ploygon = Polygon([(126.953545, 33.525297), (126.948137, 33.523007), (126.947794, 33.51993),
                         (126.948996, 33.514635), (126.943245, 33.511844), (126.940928, 33.506047),
                         (126.943245, 33.495598), (126.947279, 33.493164), (126.956034, 33.490874),
                         (126.964445, 33.48844), (126.967535, 33.491947), (126.968479, 33.496671),
                         (126.97114, 33.499248), (126.970882, 33.502397), (126.968136, 33.506691),
                         (126.966934, 33.510055), (126.973286, 33.514635), (126.96805, 33.516424),
                         (126.960754, 33.513418), (126.957493, 33.515494), (126.961441, 33.518213),
                         (126.957836, 33.523222), (126.954575, 33.525297)])

# 각 지역의 경계들을 딕셔너리로 관리
regions = {
    '서부': seobu_polygon,
    '북부': bukbu_polygon,
    '동부': dongbu_polygon,
    '남부': namu_polygon,
    '산지': sanji_polygon,
    '마라도': marado_polygon,
    '가파도': gapado_polygon,
    '비양도': biyangdo_polygon,
    '추자도': chujado_polygon,
    '우도' : udo_ploygon

}

# 2. 위도 경도를 기반으로 각 지점의 지역을 구분하는 함수
def classify_region(latitude, longitude):
    point = Point(longitude, latitude)
    for region_name, polygon in regions.items():
        if polygon.contains(point):
            return region_name
    return '기타'  # 어떤 구역에도 속하지 않는 경우

# 3. 파일 로드: data_prep_merge.xlsx 파일을 불러옴
# file_path = "여기에 파일 경로"
# df = pd.read_excel(file_path)

# 4. 데이터프레임에 새로운 '지역' 컬럼 추가
# df['지역'] = df.apply(lambda row: classify_region(row['latitude'], row['longitude']), axis=1)

# 5. 결과를 새로운 엑셀 파일로 저장
# output_file = "여기에 파일 경로"
# df.to_excel(output_file, index=False)

# print(f"파일이 성공적으로 저장되었습니다: {output_file}")
